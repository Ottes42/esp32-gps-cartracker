networks:
  gps_net:

services:
  cartracker:
    image: ghcr.io/ottes/gps-car-tracker:latest  # Use published image
    # build: .  # Comment out for production use
    container_name: cartracker
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./data/gps:/data
    networks:
      - gps_net
    ports:
      - "8080:8080" # only for dev situations, use NPM as reverse proxy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # don't forget to add "proxy_set_header X-Auth-User $remote_user;", see readme
  npm: # see http://nginxproxymanager.com/ for documentation
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81" # NPM admin UI, close or add proxyhost too
      - "443:443"
    volumes:
      - ./data/npm/data:/data
      - ./data/npm/letsencrypt:/etc/letsencrypt
    networks:
      - gps_net
